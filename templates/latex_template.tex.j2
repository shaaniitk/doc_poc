((# templates/latex_template.tex.j2 #))

((# Self-contained LaTeX document with a recursive renderer for the processed tree. #))
\documentclass{article}
\usepackage[utf8]{inputenc}
\usepackage{graphicx}
\usepackage{amsmath}
\usepackage{hyperref}
\usepackage{enumitem}
\usepackage{booktabs}
\usepackage{xcolor}
\usepackage{geometry}
\geometry{margin=1in}

((# Use the preserved metadata if it exists, otherwise use sensible defaults. #))
\title{((( preserved.title | default('Refactored Document') ))) }
\author{((( preserved.author | default('Shantanu Misra') ))) }
\date{((( preserved.date | default('\\today') ))) }

\begin{document}
\maketitle

((* macro render_nodes(node_level, level) *))
((* for title, data in node_level.items() *))
((* if level == 1 *))
\section{((( title )))}
((* elif level == 2 *))
\subsection{((( title )))}
((* elif level == 3 *))
\subsubsection{((( title )))}
((* elif level == 4 *))
\paragraph{((( title )))}
((* else *))
\subparagraph{((( title )))}
((* endif *))

((* if data.get('low_confidence_count') *))
{\small\textcolor{red}{[Review: ((( data.low_confidence_count ))) low-confidence mapped chunk(s)]}}
((* endif *))

((( data.get('processed_content', '') )))

((* if data.get('subsections') *))
((( render_nodes(data.subsections, level + 1) )))
((* endif *))
((* endfor *))
((* endmacro *))

((( render_nodes(processed_tree, 1) )))

((* if orphaned_content and orphaned_content|length > 0 *))
\section*{Uncategorized Content}

\textit{The following chunks could not be automatically assigned to specific sections. Each chunk shows its top candidate sections with similarity scores to assist in manual review and placement.}

((* for chunk in orphaned_content *))
\subsection*{Orphaned Chunk ((( loop.index )))}

((* if chunk.get('metadata', {}).get('candidate_sections') *))
\textbf{Nearest Section Suggestions:}

\begin{table}[h!]
\centering
\begin{tabular}{|l|c|c|}
\hline
\textbf{Section Path} & \textbf{Similarity} & \textbf{Distance} \\
\hline
((* for candidate in chunk.metadata.candidate_sections[:3] *))
((( candidate.path_str ))) & ((( "%.3f"|format(candidate.score) ))) & ((( "%.3f"|format(candidate.distance) ))) \\
\hline
((* endfor *))
\end{tabular}
\end{table}

((* endif *))

\textbf{Content:}

((( chunk.get('content', '') )))

\vspace{0.5cm}
\hrule
\vspace{0.5cm}

((* endfor *))
((* endif *))

\end{document}